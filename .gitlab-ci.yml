# See: https://docs.gitlab.com/ee/ci/yaml/includes.html
image: $SKA_K8S_TOOLS_BUILD_DEPLOY

services:
- docker:dind

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
cache:
  paths:
    - build

stages:
- lint
- join-reports
- build
- test
- publish
- pages
- scan


join_linting_reports:
  stage: join-reports
  tags:
    - k8srunner
  script:
    - echo "This step is needed as the artifacts can't be passed in the same stage"
    - make join-lint-reports
  artifacts:
    paths:
      - build/
    when: always


# Standardised included jobs
include:
# k8s steps
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

# Python packages lint
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/python.gitlab-ci.yml'

# Docs pages
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

# OCI images build and publish
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

# Helm Chart linting
- project: 'ska-telescope/templates-repository'
  file: gitlab-ci/includes/helm-chart-lint.gitlab-ci.yml

# Helm Chart publish
- project: 'ska-telescope/templates-repository'
  file: gitlab-ci/includes/helm-chart-publish.gitlab-ci.yml

# Release Automation
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/release.gitlab-ci.yml'


k8s-test-api-when-auth-enabled:
  extends:
    - k8s-test
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-auth-enabled'
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-auth-enabled"
    COUNT: 1
    PYTHON_TEST_COUNT: 1
    ADDMARK: ""
    CI_KEEP_NAMESPACE: 'true'
    DISABLE_AUTH: 'no'
  before_script:
    - echo "$CI_PROJECT_NAME"
    - echo "$CI_COMMIT_SHORT_SHA"
    - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
    - make k8s-install-chart
    - kubectl -n $KUBE_NAMESPACE wait --for=condition=ready pod --all --timeout=360s
    - kubectl -n $KUBE_NAMESPACE get all
    - kubectl -n $KUBE_NAMESPACE get services


stop-k8s-test-api-when-auth-enabled:
  extends:
    - stop-k8s-test
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-auth-enabled'
  script:
    - make k8s-uninstall-chart
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    - make k8s-delete-namespace

# k8s-test:
#   variables:
#     KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA'
#     SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
#     COUNT: 1
#     PYTHON_TEST_COUNT: 1
#     ADDMARK: ""
#     CI_KEEP_NAMESPACE: 'true'
#     DISABLE_AUTH: 'no'
#   before_script:
#     - echo "$CI_PROJECT_NAME"
#     - echo "$CI_COMMIT_SHORT_SHA"
#     - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
#     - make k8s-install-chart
#     - kubectl -n $KUBE_NAMESPACE wait --for=condition=ready pod --all --timeout=360s
#     - kubectl -n $KUBE_NAMESPACE get all
#     - kubectl -n $KUBE_NAMESPACE get services
