apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mongo
  name: {{ .Release.Name }}-mongo-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.svc.mongo.mongo_database }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: password
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ .Values.svc.mongo.mongo_username }}
        - name: MONGO_HOST
          value: {{ .Values.svc.mongo.mongo_host }}
        - name: MONGO_PORT
          value: {{ .Values.svc.mongo.mongo_port | quote}}
        - name: DISABLE_AUTHENTICATION
          value: {{ .Values.svc.api.disable_authentication | quote }}
        image: {{ .Values.svc.mongo.image.image }}:{{ .Values.svc.mongo.image.tag }}
        imagePullPolicy: {{ .Values.svc.mongo.image.pullPolicy }}
        name: scapi-mongo
        ports:
        - containerPort: {{ .Values.svc.api.mongo_port }}
        resources: {}
        volumeMounts:
          - mountPath: /data/db
            name: database
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: database
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default "database" }}
          {{- else }}
          emptyDir: {}
          {{- end }}

status: {}
