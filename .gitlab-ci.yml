# See: https://docs.gitlab.com/ee/ci/yaml/includes.html
image: $SKA_K8S_TOOLS_BUILD_DEPLOY

services:
- docker:dind

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
cache:
  paths:
    - build

stages:
- lint
- join-reports
- build
- test
- publish
- pages
- scan


join_linting_reports:
  stage: join-reports
  tags:
    - k8srunner
  script:
    - echo "This step is needed as the artifacts can't be passed in the same stage"
    - make join-lint-reports
  artifacts:
    paths:
      - build/
    when: always


# Standardised included jobs
include:
# k8s steps
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

# Python packages lint
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/python.gitlab-ci.yml'

# Docs pages
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

# OCI images build and publish
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

# # Helm Chart linting and Publish
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

# Release Automation
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/release.gitlab-ci.yml'


k8s-test:
  rules:
  - when: never


stop-k8s-test:
  rules:
  - when: never


k8s-test-api-with-disabled-auth:
  extends:
    - k8s-test
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-disabled-auth'
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-disabled-auth"
    COUNT: 1
    PYTHON_TEST_COUNT: 1
    ADDMARK: ""
    DISABLE_AUTH: 'yes'
  before_script:
    - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
    - make k8s-install-chart
    - kubectl -n $KUBE_NAMESPACE wait --for=condition=ready pod --all --timeout=360s
    - kubectl -n $KUBE_NAMESPACE get all
  rules:
  - when: always


stop-k8s-test-api-with-disabled-auth:
  extends:
    - stop-k8s-test
  rules:
  - when: manual
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-disabled-auth'


k8s-test-api-with-enabled-auth:
  extends:
    - k8s-test
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-enabled-auth'
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-enabled-auth"
    COUNT: 1
    PYTHON_TEST_COUNT: 1
    ADDMARK: ""
    DISABLE_AUTH: 'no'
  before_script:
    - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
    - make k8s-install-chart
    - kubectl -n $KUBE_NAMESPACE wait --for=condition=ready pod --all --timeout=360s
    - kubectl -n $KUBE_NAMESPACE get all
  rules:
  - when: always


stop-k8s-test-api-with-enabled-auth:
  extends:
    - stop-k8s-test
  rules:
  - when: manual
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-enabled-auth'